"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = require("../controllers/userController");
const authenticateToken_1 = __importDefault(require("../middleware/authenticateToken"));
const router = express_1.default.Router();
router.post("/sign-up", userController_1.signUp);
router.post("/login", userController_1.login);
router.get("/account/year", authenticateToken_1.default, userController_1.getStudentYear);
router.get("/account", authenticateToken_1.default, userController_1.getStudentAccount);
router.patch("/update-account", authenticateToken_1.default, userController_1.updateStudentAccount);
router.delete("/delete-user/:id", authenticateToken_1.default, userController_1.deleteUser);
router.post("/request-reset-password", userController_1.requestPasswordReset);
router.post("/reset-password/:token", userController_1.resetPassword);
router.post("/student-activities/add-activity/:activityId", authenticateToken_1.default, userController_1.addActivitiesToStudent);
router.patch("/student-activities/update-activity/:activityId", authenticateToken_1.default, userController_1.updateStudentActivity);
router.delete("/student-activities/delete-activity/:activityId", authenticateToken_1.default, userController_1.deleteStudentActivity);
router.get("/student-activities", authenticateToken_1.default, userController_1.getStudentActivities);
router.get("/", authenticateToken_1.default, userController_1.getFlowChartCourses);
router.get("/concentration", authenticateToken_1.default, userController_1.getConcentrationCourses);
router.get("/academic-tracker", authenticateToken_1.default, userController_1.getStudentAcademicTracker);
router.post("/past-courses/add/:courseCode", authenticateToken_1.default, userController_1.addPastCourse);
router.post("/current-courses/add", authenticateToken_1.default, userController_1.addCurrentCourse);
router.patch("/past-courses/edit-semester/:courseCode", authenticateToken_1.default, userController_1.editPastCourseSemesterTaken);
router.delete("/current-courses/remove/:courseCode", authenticateToken_1.default, userController_1.removeCurrentCourse);
router.delete("/past-courses/remove/:courseCode", authenticateToken_1.default, userController_1.removePastCourse);
router.get("/past-courses", authenticateToken_1.default, userController_1.getPastCourses);
router.get("/current-courses", authenticateToken_1.default, userController_1.getCurrentCourses);
router.patch("/:courseCode/edit-comment", authenticateToken_1.default, userController_1.editCourseComment);
router.get("/incomplete-courses", authenticateToken_1.default, userController_1.getIncompleteCourses);
router.post("/desired-gpa", authenticateToken_1.default, userController_1.getDesiredGPA);
router.post("/estimated-gpa", authenticateToken_1.default, userController_1.getGPAEstimator);
router.get("/afst-additional-major", authenticateToken_1.default, userController_1.getAFSTChosenMajor);
router.post("/afst-additional-major/add-major", authenticateToken_1.default, userController_1.createAFSTChosenAddMajor);
router.patch("/afst-additional-major/update-major", authenticateToken_1.default, userController_1.updateAFSTChosenAddMajor);
router.get("/afst-additional-major/courses", authenticateToken_1.default, userController_1.getAFSTAdditionalCourses);
router.post("/afst-additional-major/add-course/:courseCode", authenticateToken_1.default, userController_1.createAFSTAddCourse);
router.delete("/afst-additional-major/delete-course/:courseCode", authenticateToken_1.default, userController_1.deleteAFSTAddCourse);
exports.default = router;
